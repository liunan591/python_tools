version: 1
formatters:
  simple:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    datefmt: "%m/%d/%Y %H:%M:%S %p"
filters:
  require_debug_true:
    (): django.utils.log.RequireDebugTrue
handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    filters:
      - require_debug_true
    formatter: simple
    stream: ext://sys.stdout
  info_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: simple
    filename: info.log
    maxBytes: 10485760
    backupCount: 20
    encoding: utf8
  error_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: simple
    filename: errors.log
    maxBytes: 10485760
    backupCount: 20
    encoding: utf8
  email:
    class: logging.handlers.SMTPHandler
    mailhost: localhost
    fromaddr: my_app@domain.tld
    toaddrs:
      - support_team@domain.tld
      - dev_team@domain.tld
    subject: Houston, we have a problem.
#  info_handler:
#    class: logging.handlers.TimedRotatingFileHandler
#    level: ERROR
#    formatter: simple
#    filename: info.log
#    #如果设定是天，就必须写成“%Y-%m-%d.log”
#    suffix: "%Y-%m-%d_%H-%M-%S.log"# 设置后缀名称，跟strftime的格式一样
#    when: S  #定义间隔单位为秒；“S”: Seconds，“M”: Minutes，“H”: Hours，“D”: Days，“W”: Week day
#    interval: 1     #定义间隔一个1秒换一次log文件的handler
#    backupCount:3   # 保留3个旧log文件
loggers:
  simpleExample:
    level: DEBUG
    handlers: [console]
    propagate: no
#  my_module:
#    level: ERROR
#    handlers: [info_file_handler]
#    propagate: no
root:
  level: DEBUG
  handlers: [console,info_file_handler,error_file_handler]
  
###format可用参数
#%(levelno)s：打印日志级别的数值
#%(levelname)s：打印日志级别的名称
#%(pathname)s：打印当前执行程序的路径，其实就是sys.argv[0]
#%(filename)s：打印当前执行程序名
#%(funcName)s：打印日志的当前函数
#%(lineno)d：打印日志的当前行号
#%(asctime)s：打印日志的时间
#%(thread)d：打印线程ID
#%(threadName)s：打印线程名称
#%(process)d：打印进程ID
#%(message)s：打印日志信息
